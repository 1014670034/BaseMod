diff -ru ../../../_lib/decompiled/com/megacrit/cardcrawl/powers/IntangiblePower.java com/megacrit/cardcrawl/powers/IntangiblePower.java
--- ../../../_lib/decompiled/com/megacrit/cardcrawl/powers/IntangiblePower.java	2018-02-15 23:11:22.201608300 -0800
+++ com/megacrit/cardcrawl/powers/IntangiblePower.java	2018-02-01 19:41:29.051562700 -0800
@@ -3,19 +3,15 @@
  */
 package com.megacrit.cardcrawl.powers;
 
-import com.badlogic.gdx.graphics.Texture;
-import com.megacrit.cardcrawl.actions.AbstractGameAction;
-import com.megacrit.cardcrawl.actions.GameActionManager;
 import com.megacrit.cardcrawl.actions.common.ReducePowerAction;
 import com.megacrit.cardcrawl.actions.common.RemoveSpecificPowerAction;
 import com.megacrit.cardcrawl.cards.DamageInfo;
+import com.megacrit.cardcrawl.characters.AbstractPlayer;
 import com.megacrit.cardcrawl.core.AbstractCreature;
 import com.megacrit.cardcrawl.core.CardCrawlGame;
 import com.megacrit.cardcrawl.dungeons.AbstractDungeon;
 import com.megacrit.cardcrawl.helpers.ImageMaster;
-import com.megacrit.cardcrawl.localization.LocalizedStrings;
 import com.megacrit.cardcrawl.localization.PowerStrings;
-import com.megacrit.cardcrawl.powers.AbstractPower;
 
 public class IntangiblePower
 extends AbstractPower {
@@ -36,6 +32,18 @@
         this.justApplied = true;
     }
 
+    // BaseMod modification
+    @Override
+    public void atEndOfRound() {
+        if (owner instanceof AbstractPlayer) {
+            AbstractDungeon.actionManager.addToBottom(new ReducePowerAction(owner, owner, "Intangible", 1));
+            
+            if (amount == 0) {
+                AbstractDungeon.actionManager.addToBottom(new RemoveSpecificPowerAction(owner, owner, "Intangible"));
+            }
+        }
+    }
+    
     @Override
     public float atDamageReceive(float damage, DamageInfo.DamageType type) {
         if (damage > 0.0f) {
@@ -46,7 +54,7 @@
 
     @Override
     public void updateDescription() {
-        this.description = DESCRIPTIONS[0];
+        this.description = this.amount == 1 ? DESCRIPTIONS[2] : DESCRIPTIONS[0] + this.amount + DESCRIPTIONS[1];
     }
 
     @Override
