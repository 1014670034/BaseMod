diff -ru ../../../_lib/decompiled/com/megacrit/cardcrawl/core/CardCrawlGame.java com/megacrit/cardcrawl/core/CardCrawlGame.java
--- ../../../_lib/decompiled/com/megacrit/cardcrawl/core/CardCrawlGame.java	2018-01-19 20:30:39.812725800 -0800
+++ com/megacrit/cardcrawl/core/CardCrawlGame.java	2018-01-21 01:09:49.853437200 -0800
@@ -113,6 +113,9 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+// BaseMod imports
+import basemod.BaseMod;
+
 public class CardCrawlGame
 implements ApplicationListener {
     public static String VERSION_NUM = "[EARLY_ACCESS_012] (01-18-2018)";
@@ -252,6 +255,9 @@
             if (Settings.isDebug) {
                 CardCrawlGame.splashScreen.isDone = true;
             }
+            
+            // BaseMod hook
+            BaseMod.publishPostInitialize();
         }
         catch (Exception e) {
             ExceptionHandler.handleException(e, logger);
@@ -287,9 +293,9 @@
     public void migrateHelper(String file) {
         Preferences p = Gdx.app.getPreferences(file);
         Prefs p2 = SaveHelper.getPrefs(file);
-        Map map = p.get();
+        Map<?,?> map = p.get();
         for (Map.Entry c : map.entrySet()) {
-            p2.putString(c.getKey(), p.getString(c.getKey()));
+            p2.putString((String)c.getKey(), p.getString((String)c.getKey()));
         }
         p2.flush();
     }
@@ -340,6 +346,10 @@
                 }
             }
             DrawMaster.draw(this.sb);
+            
+            // BaseMod hook
+            BaseMod.publishRender(sb);
+
             if (CardCrawlGame.cardPopup.isOpen) {
                 cardPopup.render(this.sb);
             }
@@ -371,7 +381,11 @@
                 this.sb.draw(ImageMaster.WHITE_SQUARE_IMG, 0.0f, 0.0f, (float)(- Settings.VERT_LETTERBOX_AMT), (float)Settings.HEIGHT);
                 this.sb.draw(ImageMaster.WHITE_SQUARE_IMG, (float)Settings.WIDTH, 0.0f, (float)Settings.VERT_LETTERBOX_AMT, (float)Settings.HEIGHT);
             }
-            this.sb.end();
+            
+            // BaseMod hook
+            BaseMod.publishPostRender(sb);
+            
+            this.sb.end(); 
         }
         catch (Exception e) {
             ExceptionHandler.handleException(e, logger);
@@ -505,7 +519,7 @@
         mysteryMachine = 0;
     }
 
-    public void update() {
+    public void update() {    
         cursor.update();
         screenShake.update(viewport);
         if (mode != GameMode.SPLASH) {
@@ -532,6 +546,10 @@
             this.displayCursor = !this.displayCursor;
         }
         InputHelper.updateFirst();
+        
+        // BaseMod hook
+        BaseMod.publishPreUpdate();
+        
         if (CardCrawlGame.cardPopup.isOpen) {
             cardPopup.update();
         }
@@ -650,7 +668,11 @@
             default: {
                 logger.info("Unknown Game Mode: " + mode.name());
             }
-        }
+        }      
+
+        // BaseMod hook
+        BaseMod.publishPostUpdate();
+        
         this.updateDebugSwitch();
         InputHelper.updateLast();
         if (Settings.isInfo) {
diff -ru ../../../_lib/decompiled/com/megacrit/cardcrawl/ui/buttons/CancelButton.java com/megacrit/cardcrawl/ui/buttons/CancelButton.java
--- ../../../_lib/decompiled/com/megacrit/cardcrawl/ui/buttons/CancelButton.java	2018-01-21 01:02:58.518447800 -0800
+++ com/megacrit/cardcrawl/ui/buttons/CancelButton.java	2018-01-21 03:51:12.472275000 -0800
@@ -29,6 +29,9 @@
 import com.megacrit.cardcrawl.screens.stats.StatsScreen;
 import com.megacrit.cardcrawl.screens.trial.TrialScreen;
 
+// BaseModm imports
+import basemod.BaseMod;
+
 public class CancelButton {
     private static final UIStrings uiStrings = CardCrawlGame.languagePack.getUIString("Cancel Button");
     public static final String[] TEXT = CancelButton.uiStrings.TEXT;
@@ -95,6 +98,16 @@
                         this.hide();
                         return;
                     }
+                    
+                    // BaseMod modification
+                    if (BaseMod.modSettingsUp) {
+                        BaseMod.modSettingsUp = false;
+                        //CardCrawlGame.mainMenuScreen.lighten();
+                        //CardCrawlGame.mainMenuScreen.screen = MainMenuScreen.CurScreen.MAIN_MENU;
+                        hide();
+                        return;
+                    }
+                    
                     if (this.buttonText.equals(TEXT[0])) {
                         return;
                     }
diff -ru ../../../_lib/decompiled/com/megacrit/cardcrawl/ui/buttons/EndTurnButton.java com/megacrit/cardcrawl/ui/buttons/EndTurnButton.java
--- ../../../_lib/decompiled/com/megacrit/cardcrawl/ui/buttons/EndTurnButton.java	2018-01-19 20:30:45.726395900 -0800
+++ com/megacrit/cardcrawl/ui/buttons/EndTurnButton.java	2018-01-19 21:16:48.864194100 -0800
@@ -32,6 +32,9 @@
 import java.util.ArrayList;
 import java.util.Iterator;
 
+// BaseMod imports
+import basemod.DevConsole;
+
 public class EndTurnButton {
     private static final TutorialStrings tutorialStrings = CardCrawlGame.languagePack.getTutorialString("End Turn Tip");
     public static final String[] MSG = EndTurnButton.tutorialStrings.TEXT;
@@ -91,7 +94,9 @@
                 }
             }
         }
-        if (this.hitbox.clicked || Gdx.input.isKeyJustPressed(33) && !this.isDisabled && this.enabled) {
+        
+        // BaseMod modification
+        if (this.hitbox.clicked || (!DevConsole.visible && Gdx.input.isKeyJustPressed(33)) && !this.isDisabled && this.enabled) {
             this.hitbox.clicked = false;
             if (!this.isDisabled && !AbstractDungeon.isScreenUp) {
                 this.disable(true);
diff -ru ../../../_lib/decompiled/com/megacrit/cardcrawl/ui/panels/DiscardPilePanel.java com/megacrit/cardcrawl/ui/panels/DiscardPilePanel.java
--- ../../../_lib/decompiled/com/megacrit/cardcrawl/ui/panels/DiscardPilePanel.java	2018-01-19 20:30:45.853517300 -0800
+++ com/megacrit/cardcrawl/ui/panels/DiscardPilePanel.java	2018-01-19 21:27:37.917842600 -0800
@@ -36,6 +36,9 @@
 import java.util.ArrayList;
 import java.util.Iterator;
 
+// BaseMod imports
+import basemod.DevConsole;
+
 public class DiscardPilePanel
 extends AbstractPanel {
     private static final TutorialStrings tutorialStrings = CardCrawlGame.languagePack.getTutorialString("Discard Tip");
@@ -89,12 +92,14 @@
             if (InputHelper.justClickedLeft && AbstractDungeon.getMonsters() != null && !AbstractDungeon.isScreenUp && AbstractDungeon.screen != AbstractDungeon.CurrentScreen.DISCARD_VIEW && !AbstractDungeon.getMonsters().areMonstersDead()) {
                 this.openDiscardPile();
             }
-        } else if (Gdx.input.isKeyJustPressed(47) && AbstractDungeon.getMonsters() != null && !AbstractDungeon.isScreenUp && AbstractDungeon.screen != AbstractDungeon.CurrentScreen.GAME_DECK_VIEW && !AbstractDungeon.getMonsters().areMonstersDead()) {
+        // BaseMod modification
+        } else if (!DevConsole.visible && Gdx.input.isKeyJustPressed(47) && AbstractDungeon.getMonsters() != null && !AbstractDungeon.isScreenUp && AbstractDungeon.screen != AbstractDungeon.CurrentScreen.GAME_DECK_VIEW && !AbstractDungeon.getMonsters().areMonstersDead()) {
             this.openDiscardPile();
             return;
         }
         if (AbstractDungeon.screen == AbstractDungeon.CurrentScreen.DISCARD_VIEW) {
-            if (this.bannerHitbox.hovered && InputHelper.justClickedLeft || Gdx.input.isKeyJustPressed(47)) {
+            // BaseMod modification
+            if (this.bannerHitbox.hovered && InputHelper.justClickedLeft || (!DevConsole.visible && Gdx.input.isKeyJustPressed(47))) {
                 this.hitbox.hovered = false;
                 this.bannerHitbox.hovered = false;
                 InputHelper.justClickedLeft = false;
diff -ru ../../../_lib/decompiled/com/megacrit/cardcrawl/ui/panels/DrawPilePanel.java com/megacrit/cardcrawl/ui/panels/DrawPilePanel.java
--- ../../../_lib/decompiled/com/megacrit/cardcrawl/ui/panels/DrawPilePanel.java	2018-01-19 20:30:45.866530600 -0800
+++ com/megacrit/cardcrawl/ui/panels/DrawPilePanel.java	2018-01-19 21:28:25.853573500 -0800
@@ -39,6 +39,9 @@
 import java.util.ArrayList;
 import java.util.Iterator;
 
+// BaseMod imports
+import basemod.DevConsole;
+
 public class DrawPilePanel
 extends AbstractPanel {
     private static final TutorialStrings tutorialStrings = CardCrawlGame.languagePack.getTutorialString("Draw Tip");
@@ -91,12 +94,14 @@
             if (InputHelper.justClickedLeft && AbstractDungeon.getMonsters() != null && !AbstractDungeon.isScreenUp && AbstractDungeon.screen != AbstractDungeon.CurrentScreen.GAME_DECK_VIEW && !AbstractDungeon.getMonsters().areMonstersDead()) {
                 this.openDrawPile();
             }
-        } else if (Gdx.input.isKeyJustPressed(29) && AbstractDungeon.getMonsters() != null && !AbstractDungeon.isScreenUp && AbstractDungeon.screen != AbstractDungeon.CurrentScreen.GAME_DECK_VIEW && !AbstractDungeon.getMonsters().areMonstersDead()) {
+        // BaseMod modification
+        } else if (!DevConsole.visible && Gdx.input.isKeyJustPressed(29) && AbstractDungeon.getMonsters() != null && !AbstractDungeon.isScreenUp && AbstractDungeon.screen != AbstractDungeon.CurrentScreen.GAME_DECK_VIEW && !AbstractDungeon.getMonsters().areMonstersDead()) {
             this.openDrawPile();
             return;
         }
         if (AbstractDungeon.screen == AbstractDungeon.CurrentScreen.GAME_DECK_VIEW) {
-            if (this.bannerHitbox.hovered && InputHelper.justClickedLeft || Gdx.input.isKeyJustPressed(29)) {
+            // BaseMod modification
+            if (this.bannerHitbox.hovered && InputHelper.justClickedLeft || (!DevConsole.visible && Gdx.input.isKeyJustPressed(29))) {
                 this.hitbox.hovered = false;
                 this.bannerHitbox.hovered = false;
                 InputHelper.justClickedLeft = false;
diff -ru ../../../_lib/decompiled/com/megacrit/cardcrawl/ui/panels/TopPanel.java com/megacrit/cardcrawl/ui/panels/TopPanel.java
--- ../../../_lib/decompiled/com/megacrit/cardcrawl/ui/panels/TopPanel.java	2018-01-19 20:30:45.961622700 -0800
+++ com/megacrit/cardcrawl/ui/panels/TopPanel.java	2018-01-19 21:41:05.589296700 -0800
@@ -45,6 +45,9 @@
 import com.megacrit.cardcrawl.ui.panels.PotionPopUp;
 import java.util.ArrayList;
 
+// BaseMod imports
+import basemod.DevConsole;
+    
 public class TopPanel {
     private static final TutorialStrings tutorialStrings = CardCrawlGame.languagePack.getTutorialString("Top Panel Tips");
     public static final String[] MSG = TopPanel.tutorialStrings.TEXT;
@@ -324,7 +327,8 @@
             this.deckButtonDisabled = true;
             this.deckHb.hovered = false;
         }
-        if (this.deckHb.hovered && InputHelper.justClickedLeft || Gdx.input.isKeyJustPressed(32)) {
+        // BaseMod modification
+        if (this.deckHb.hovered && InputHelper.justClickedLeft || (!DevConsole.visible && Gdx.input.isKeyJustPressed(32))) {
             if (AbstractDungeon.screen == AbstractDungeon.CurrentScreen.COMBAT_REWARD) {
                 AbstractDungeon.closeCurrentScreen();
                 AbstractDungeon.deckViewScreen.open();
@@ -383,7 +387,8 @@
             this.mapButtonDisabled = true;
             this.mapHb.hovered = false;
         }
-        if (this.mapHb.hovered && InputHelper.justClickedLeft || Gdx.input.isKeyJustPressed(41)) {
+        // BaseMod modification
+        if (this.mapHb.hovered && InputHelper.justClickedLeft || (!DevConsole.visible && Gdx.input.isKeyJustPressed(41))) {
             if (AbstractDungeon.screen == AbstractDungeon.CurrentScreen.MAP && !AbstractDungeon.dungeonMapScreen.dismissable) {
                 CardCrawlGame.sound.play("CARD_REJECT");
             } else if (!AbstractDungeon.isScreenUp) {
